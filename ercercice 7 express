const connection = require('./db-config');
const express = require('express');
const app = express();

const port = process.env.PORT || 3000;
app.use(express.json());

app.post('/api/movies , (req, res) => {
const {title, director, year, color, duration} = req.body;
connection.querry(
'INSERT INTO movies(title, director, year, color, duration) Values(?, ?, ?, ?)',
[title, director, year, color, duration],
(err, results) =>{
if(err) {
res.status(500).send('Error saving the movie');
}else{
     res.status(201).send('Movie successfully saved');
      }
    }
  );
});
app.put('/api/users/:id', (req, res) => {
  const userId = req.params.id;
  const db = connection.promise();
  let existingUser = null;
  db.query('SELECT * FROM users WHERE id = ?', [userId])
    .then(([results]) => {
      existingUser = results[0];
      if (!existingUser) return Promise.reject('RECORD_NOT_FOUND');
      return db.query('UPDATE users SET ? WHERE id = ?', [req.body, userId]);
    })
    .then(() => {
      res.status(200).json({ ...existingUser, ...req.body });
    })
    .catch((err) => {
      console.error(err);
      if (err === 'RECORD_NOT_FOUND')
        res.status(404).send(`User with id ${userId} not found.`);
      else res.status(500).send('Error updating a user');
    });

app.put('/api/movies/:id', (req, res) => {
  const movieId = req.params.id;
  const moviePropsToUpdate = req.body;
  connection.query(
    'UPDATE movies SET ? WHERE id = ?',
    [moviePropsToUpdate, movieId],
    (err) => {
      if (err) {
        console.log(err);
        res.status(500).send('Error updating a movie');
      } else {
        res.status(200).send('Movie updated successfully ðŸŽ‰');
      }
    }
  );
});
